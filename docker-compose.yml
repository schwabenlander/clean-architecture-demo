version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: cleanarch-postgres
    environment:
      POSTGRES_DB: CleanArchitecture
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Web API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: cleanarch-api
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__CleanArchitecture=Host=postgres;Database=CleanArchitecture;Username=postgres;Password=password;
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./Service/appsettings.json:/app/appsettings.json:ro

  # MVC Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: cleanarch-web
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__CleanArchitecture=Host=postgres;Database=CleanArchitecture;Username=postgres;Password=password;
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./Presentation/appsettings.json:/app/appsettings.json:ro

volumes:
  postgres_data: